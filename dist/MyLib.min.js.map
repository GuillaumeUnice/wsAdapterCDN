{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///MyLib.min.js","webpack:///webpack/bootstrap f6974d6c8faa8b57fe83","webpack:///./src/index.ts"],"names":["root","factory","exports","module","define","amd","MyLib","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","wsJmsLib","prototype","createDestination","name","indexOf","baseTopicUrl","session","createTopic","baseQueueUrl","createQueue","Error","buildMessage","message","textMessage","createTextMessage","connect","url","callback","connectionFactory","JmsConnectionFactory","connectionFuture","createConnection","connection","getValue","createSession","Session","AUTO_ACKNOWLEDGE","start","subscribe","channelName","messageListener","topic","consumer","createConsumer","consumers","setMessageListener","send","dest","producer","createProducer","future_1","exception","console","error","e","close","unsubscribe"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,OAAA,WAAAH,GACA,gBAAAC,SACAA,QAAAI,MAAAL,IAEAD,EAAAM,MAAAL,KACCM,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAR,OAGA,IAAAC,GAAAQ,EAAAD,IACAR,WACAU,GAAAF,EACAG,UAUA,OANAL,GAAAE,GAAAI,KAAAX,EAAAD,QAAAC,IAAAD,QAAAO,GAGAN,EAAAU,UAGAV,EAAAD,QAvBA,GAAAS,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAASN,EAAQD,EAASO,GAE/BN,EAAOD,QAAUO,EAAoB,IAKhC,SAASN,EAAQD,GAGtB,YE9DD,IAAAgB,GAAA,mBAAAA,MA+EA,MApESA,GAAAC,UAAAC,kBAAR,SAA0BC,GACzB,GAA2C,GAAvCA,EAAKC,QAAQJ,EAASK,cACzB,MAAOhB,MAAKiB,QAAQC,YAAYJ,EAE5B,IAA2C,GAAvCA,EAAKC,QAAQJ,EAASQ,cAC9B,MAAOnB,MAAKiB,QAAQG,YAAYN,EAGhC,MAAM,IAAIO,OAAM,mDAITV,EAAAC,UAAAU,aAAR,SAAsBC,GACpB,GAAIC,GAA2BxB,KAAKiB,QAAQQ,kBAAkBF,EAC9D,OAAOC,IAKHb,EAAAC,UAAAc,QAAP,SAAeC,EAAaC,GACzB,GAAIC,GAAoB,GAAIC,sBAAqBH,GAC/CI,EAAmBF,EAAkBG,iBAAiB,WACzDhC,KAAKiC,WAAaF,EAAiBG,WAEnClC,KAAKiB,QAAUjB,KAAKiC,WAAWE,iBAAqBC,QAAQC,kBAC5DrC,KAAKiC,WAAWK,MAAM,WACrBV,SAKIjB,EAAAC,UAAA2B,UAAP,SAAiBC,EAAqBC,GAKrC,GAAIC,GAAuB1C,KAAKiB,QAAQC,YAAYsB,GAChDG,EAAqB3C,KAAKiB,QAAQ2B,eAAeF,EACrD1C,MAAK6C,UAAUL,GAAeG,EAC9BA,EAASG,mBAAmBL,IAItB9B,EAAAC,UAAAmC,KAAP,SAAYxB,EAAiBmB,EAAed,GAC3C,GAAIoB,GAAsBhD,KAAKa,kBAAkB6B,GAC7CO,EAAqBjD,KAAKiB,QAAQiC,eAAeF,GAC/CxB,EAA2BxB,KAAKsB,aAAaC,EAEnD,KACC,GAAI4B,GAA0BF,EAASF,KAAKvB,EAAa,WACnD2B,EAAOC,WACTC,QAAQC,MAAMH,EAAOC,WAEvBxB,MAED,MAAO2B,GACRF,QAAQC,MAAMC,GAEdN,EAASO,SAGH7C,EAAAC,UAAA6C,YAAP,SAAmBjB,EAAqBZ,GACtC,GAAIe,GAAqB3C,KAAK6C,UAAUL,EACpCG,WACK3C,MAAK6C,UAAUL,GACtBG,EAASa,MAAM5B,KA1ELjB,EAAAK,aAAuB,QACvBL,EAAAQ,aAAuB,QA4EvCR,IA/EchB,GAAAgB,SAAQA","file":"MyLib.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"MyLib\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MyLib\"] = factory();\n\telse\n\t\troot[\"MyLib\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"MyLib\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MyLib\"] = factory();\n\telse\n\t\troot[\"MyLib\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/// <reference path=\"./JmsClient.d.ts\" />\n\t\"use strict\";\n\tvar wsJmsLib = (function () {\n\t    function wsJmsLib() {\n\t    }\n\t    //////////////////////////////////////////////////////////////////////////////////\n\t    wsJmsLib.prototype.createDestination = function (name) {\n\t        if (name.indexOf(wsJmsLib.baseTopicUrl) == 0) {\n\t            return this.session.createTopic(name);\n\t        }\n\t        else if (name.indexOf(wsJmsLib.baseQueueUrl) == 0) {\n\t            return this.session.createQueue(name);\n\t        }\n\t        else {\n\t            throw new Error(\"Destination must start with /topic/ or /queue/\");\n\t        }\n\t    };\n\t    wsJmsLib.prototype.buildMessage = function (message) {\n\t        var textMessage = this.session.createTextMessage(message);\n\t        return textMessage;\n\t    };\n\t    //////////////////////////////////////////////////////////////////////////////////\n\t    wsJmsLib.prototype.connect = function (url, callback) {\n\t        var connectionFactory = new JmsConnectionFactory(url);\n\t        var connectionFuture = connectionFactory.createConnection(function () {\n\t            this.connection = connectionFuture.getValue();\n\t            this.session = this.connection.createSession(false, Session.AUTO_ACKNOWLEDGE);\n\t            this.connection.start(function () {\n\t                callback();\n\t            });\n\t        });\n\t    };\n\t    ;\n\t    wsJmsLib.prototype.subscribe = function (channelName, messageListener) {\n\t        // assuming connection has already been established and started\n\t        // ideally we need to maintain the state of the connection and throw error\n\t        // if the controller calls subscribe before connection is established\n\t        // or after the connection is closed\n\t        var topic = this.session.createTopic(channelName);\n\t        var consumer = this.session.createConsumer(topic);\n\t        this.consumers[channelName] = consumer;\n\t        consumer.setMessageListener(messageListener);\n\t    };\n\t    ;\n\t    wsJmsLib.prototype.send = function (message, topic, callback) {\n\t        var dest = this.createDestination(topic);\n\t        var producer = this.session.createProducer(dest);\n\t        var textMessage = this.buildMessage(message);\n\t        try {\n\t            var future_1 = producer.send(textMessage, function () {\n\t                if (future_1.exception) {\n\t                    console.error(future_1.exception);\n\t                }\n\t                callback();\n\t            });\n\t        }\n\t        catch (e) {\n\t            console.error(e);\n\t        }\n\t        producer.close();\n\t    };\n\t    wsJmsLib.prototype.unsubscribe = function (channelName, callback) {\n\t        var consumer = this.consumers[channelName];\n\t        if (consumer) {\n\t            delete this.consumers[channelName];\n\t            consumer.close(callback);\n\t        }\n\t    };\n\t    ;\n\t    wsJmsLib.baseTopicUrl = 'topic';\n\t    wsJmsLib.baseQueueUrl = 'queue';\n\t    return wsJmsLib;\n\t}());\n\texports.wsJmsLib = wsJmsLib;\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// MyLib.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f6974d6c8faa8b57fe83","/// <reference path=\"./JmsClient.d.ts\" />\n\nexport  class wsJmsLib {\n\n\tprivate static baseTopicUrl: string = 'topic';\n\tprivate static baseQueueUrl: string = 'queue';\n\n  private connection: Connection;\n  private session: Session;\n  private consumers: { [key:string]:Consumer; };\n\n\t//////////////////////////////////////////////////////////////////////////////////\n\t\n\tprivate createDestination(name: string): Topic | Queue {\n\t\tif (name.indexOf(wsJmsLib.baseTopicUrl) == 0) {\n\t\t\treturn this.session.createTopic(name);\n\t\t}\n\t\telse if (name.indexOf(wsJmsLib.baseQueueUrl) == 0) {\n\t\t\treturn this.session.createQueue(name);\n\t\t}\n\t\telse {\n\t\t\tthrow new Error(\"Destination must start with /topic/ or /queue/\");\n\t\t}\n\t}\n\n  private buildMessage (message: string): textMessage {\n    let textMessage: textMessage = this.session.createTextMessage(message);\n    return textMessage;\n  }\n\n\t//////////////////////////////////////////////////////////////////////////////////\n\n\tpublic connect(url: string, callback: Function) {\n    let connectionFactory = new JmsConnectionFactory(url);\n\t\tlet connectionFuture = connectionFactory.createConnection(function(){\n\t\t\tthis.connection = connectionFuture.getValue();\n\n\t\t\tthis.session = this.connection.createSession(false, Session.AUTO_ACKNOWLEDGE);\n\t\t\tthis.connection.start(function() {\n\t\t\t\tcallback();\n\t\t\t});\n\t\t});\n\t};\n\n\tpublic subscribe(channelName: string, messageListener: Function) {\n\t\t// assuming connection has already been established and started\n\t\t// ideally we need to maintain the state of the connection and throw error\n\t\t// if the controller calls subscribe before connection is established\n\t\t// or after the connection is closed\n\t\tlet topic: Topic | Queue = this.session.createTopic(channelName);\n\t\tlet consumer: Consumer = this.session.createConsumer(topic);\n\t\tthis.consumers[channelName] = consumer;\n\t\tconsumer.setMessageListener(messageListener);\n\t};\n\n\n\tpublic send(message: string, topic: string, callback: Function): void {\n\t\tlet dest: Queue | Topic = this.createDestination(topic);\n\t\tlet producer: Producer = this.session.createProducer(dest);\n    let textMessage: textMessage = this.buildMessage(message);\n\t\t\n\t\ttry {\n\t\t\tlet future: FutureException = producer.send(textMessage, function () {\n\t\t\t\t\tif (future.exception) {\n\t\t\t\t\t\t\tconsole.error(future.exception);\n\t\t\t\t\t}\n\t\t\t\t\tcallback();\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t\t\tproducer.close();\n\t}\n\n  public unsubscribe(channelName: string, callback: Function) {\n    let consumer: Consumer = this.consumers[channelName];\n    if (consumer) {\n      delete this.consumers[channelName];\n      consumer.close(callback);\n    }\n  };\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/index.ts"],"sourceRoot":""}